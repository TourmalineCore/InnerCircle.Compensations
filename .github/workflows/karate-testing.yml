name: Karate Local Testing

on:
  push:
    branches:
      - 'feature/*' 
      
  pull_request:
    branches:
      - 'master'

env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run service via docker-compose
      run: |
        docker-compose -f docker-compose-test.yaml up --abort-on-container-exit > docker-compose-logs.txt

    - name: Extract and filter test results from karate container logs
      run: |
        LOGS=$(cat docker-compose-logs.txt)
        LOGS=$(echo "$LOGS" | sed 's/login=[^ ]*/login=****/g' | sed 's/password=[^ ]*/password=****/g')
        echo "$LOGS" > filtered-logs.txt
        cat filtered-logs.txt
        FAILED=$(echo "$LOGS" | grep -oP 'failed: *\K\d+')
        PASSED=$(echo "$LOGS" | grep -oP 'passed: *\K\d+')
        echo "Failed tests: $FAILED"
        echo "Passed tests: $PASSED"
        if [ "$FAILED" -gt 0 ]; then
          echo "Failed tests found! Failing the pipeline..."
          exit 1
        fi
        if [ "$PASSED" -eq 0 ]; then
          echo "No tests passed! Failing the pipeline..."
          exit 1
        fi
# jobs:
#   test:
#     # Image to run project and tests
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Run service via docker-compose
#       # Run project via docker-compose. 
#       # Use --abort-on-container-exit flag to stop all containers when tests were passed or failed to free up resources.
#       run: |
#         docker-compose -f docker-compose-test.yaml up --abort-on-container-exit
#     - name: Extract test results from karate container logs
#       # Extract test results from container logs
#       # We waiting for `passed: <number of passed tests>` in logs
#       run: |
#         FAILED=$(docker-compose -f docker-compose-test.yaml logs karate-tests | grep -oP 'failed: *\K\d+')
#         PASSED=$(docker-compose -f docker-compose-test.yaml logs karate-tests | grep -oP 'passed: *\K\d+')
#         echo "Failed tests: $FAILED"
#         echo "Passed tests: $PASSED"
#         if [ $FAILED -gt 0 ]; then
#           echo "Failed tests found! Failing the pipeline..."
#           exit 1
#         fi
#         if [ $PASSED -eq 0 ]; then
#           echo "No tests passed! Failing the pipeline..."
#           exit 1
#         fi
