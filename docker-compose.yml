version: "3.8"

services:
  db:
    image: postgres:13
    restart: always
    container_name: 'db'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Compensations
    ports:
      - 11237:5432
    networks:
      - compensations-deb

  mockServer:
    container_name: 'mockServer'
    image: mockserver/mockserver:5.15.0
    profiles: ["local-run"]
    command: -logLevel INFO
    ports:
      - 1080:1080
    volumes:
      - ./initializer.json:/config/initializer.json
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializer.json
    networks:
      - compensations-deb

  api:
    container_name: 'api'
    profiles: ["local-run"]
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - "5283:80"
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: "MockForPullRequest"
    networks:
      - compensations-deb

  karate-tests:
    container_name: 'karate-tests'
    profiles: ["local-run"]
    build:
      dockerfile: KarateDockerfile
      context: .
    depends_on:
      - api
    command: ["karate", "/karate"]
    volumes:
      - .:/karate
    environment:
      AUTH_API_ROOT_URL: "http://mockServer:1080"
      API_ROOT_URL: "http://api"
      SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "true"
    networks:
      - compensations-deb

  production-karate-tests:
    container_name: 'production-karate-tests'
    profiles: ["production-e2e-tests"]
    build:
      dockerfile: KarateDockerfile
      context: .
    command: ["karate", "/karate"]
    volumes:
      - .:/karate
    environment:
      AUTH_API_ROOT_URL: "https://innercircle.tourmalinecore.com/auth"
      API_ROOT_URL: "https://innercircle.tourmalinecore.com/auth"
      SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "false"
      AUTH_LOGIN: ${AUTH_LOGIN}
      AUTH_PASSWORD: ${AUTH_PASSWORD}

networks:
  compensations-deb: {}
  ic-backend-deb:
    external: true
